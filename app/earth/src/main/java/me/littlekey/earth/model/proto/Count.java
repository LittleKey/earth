// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: vitality.proto at 6:1
package me.littlekey.earth.model.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Float;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Count extends Message<Count, Count.Builder> {
  public static final ProtoAdapter<Count> ADAPTER = new ProtoAdapter_Count();

  private static final long serialVersionUID = 0L;

  public static final Float DEFAULT_RANK = 0.0f;

  public static final Integer DEFAULT_SELECTED_NUM = 0;

  public static final Integer DEFAULT_UNREAD_MESSAGE = 0;

  public static final Long DEFAULT_START_TIME = 0L;

  public static final Long DEFAULT_END_TIME = 0L;

  public static final Long DEFAULT_TIME = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#FLOAT"
  )
  public final Float rank;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer selected_num;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#UINT32"
  )
  public final Integer unread_message;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long start_time;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long end_time;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long time;

  public Count(Float rank, Integer selected_num, Integer unread_message, Long start_time, Long end_time, Long time) {
    this(rank, selected_num, unread_message, start_time, end_time, time, ByteString.EMPTY);
  }

  public Count(Float rank, Integer selected_num, Integer unread_message, Long start_time, Long end_time, Long time, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.rank = rank;
    this.selected_num = selected_num;
    this.unread_message = unread_message;
    this.start_time = start_time;
    this.end_time = end_time;
    this.time = time;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.rank = rank;
    builder.selected_num = selected_num;
    builder.unread_message = unread_message;
    builder.start_time = start_time;
    builder.end_time = end_time;
    builder.time = time;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Count)) return false;
    Count o = (Count) other;
    return Internal.equals(unknownFields(), o.unknownFields())
        && Internal.equals(rank, o.rank)
        && Internal.equals(selected_num, o.selected_num)
        && Internal.equals(unread_message, o.unread_message)
        && Internal.equals(start_time, o.start_time)
        && Internal.equals(end_time, o.end_time)
        && Internal.equals(time, o.time);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (rank != null ? rank.hashCode() : 0);
      result = result * 37 + (selected_num != null ? selected_num.hashCode() : 0);
      result = result * 37 + (unread_message != null ? unread_message.hashCode() : 0);
      result = result * 37 + (start_time != null ? start_time.hashCode() : 0);
      result = result * 37 + (end_time != null ? end_time.hashCode() : 0);
      result = result * 37 + (time != null ? time.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (rank != null) builder.append(", rank=").append(rank);
    if (selected_num != null) builder.append(", selected_num=").append(selected_num);
    if (unread_message != null) builder.append(", unread_message=").append(unread_message);
    if (start_time != null) builder.append(", start_time=").append(start_time);
    if (end_time != null) builder.append(", end_time=").append(end_time);
    if (time != null) builder.append(", time=").append(time);
    return builder.replace(0, 2, "Count{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Count, Builder> {
    public Float rank;

    public Integer selected_num;

    public Integer unread_message;

    public Long start_time;

    public Long end_time;

    public Long time;

    public Builder() {
    }

    public Builder rank(Float rank) {
      this.rank = rank;
      return this;
    }

    public Builder selected_num(Integer selected_num) {
      this.selected_num = selected_num;
      return this;
    }

    public Builder unread_message(Integer unread_message) {
      this.unread_message = unread_message;
      return this;
    }

    public Builder start_time(Long start_time) {
      this.start_time = start_time;
      return this;
    }

    public Builder end_time(Long end_time) {
      this.end_time = end_time;
      return this;
    }

    public Builder time(Long time) {
      this.time = time;
      return this;
    }

    @Override
    public Count build() {
      return new Count(rank, selected_num, unread_message, start_time, end_time, time, buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Count extends ProtoAdapter<Count> {
    ProtoAdapter_Count() {
      super(FieldEncoding.LENGTH_DELIMITED, Count.class);
    }

    @Override
    public int encodedSize(Count value) {
      return (value.rank != null ? ProtoAdapter.FLOAT.encodedSizeWithTag(1, value.rank) : 0)
          + (value.selected_num != null ? ProtoAdapter.UINT32.encodedSizeWithTag(2, value.selected_num) : 0)
          + (value.unread_message != null ? ProtoAdapter.UINT32.encodedSizeWithTag(3, value.unread_message) : 0)
          + (value.start_time != null ? ProtoAdapter.INT64.encodedSizeWithTag(4, value.start_time) : 0)
          + (value.end_time != null ? ProtoAdapter.INT64.encodedSizeWithTag(5, value.end_time) : 0)
          + (value.time != null ? ProtoAdapter.INT64.encodedSizeWithTag(6, value.time) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Count value) throws IOException {
      if (value.rank != null) ProtoAdapter.FLOAT.encodeWithTag(writer, 1, value.rank);
      if (value.selected_num != null) ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.selected_num);
      if (value.unread_message != null) ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.unread_message);
      if (value.start_time != null) ProtoAdapter.INT64.encodeWithTag(writer, 4, value.start_time);
      if (value.end_time != null) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.end_time);
      if (value.time != null) ProtoAdapter.INT64.encodeWithTag(writer, 6, value.time);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Count decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.rank(ProtoAdapter.FLOAT.decode(reader)); break;
          case 2: builder.selected_num(ProtoAdapter.UINT32.decode(reader)); break;
          case 3: builder.unread_message(ProtoAdapter.UINT32.decode(reader)); break;
          case 4: builder.start_time(ProtoAdapter.INT64.decode(reader)); break;
          case 5: builder.end_time(ProtoAdapter.INT64.decode(reader)); break;
          case 6: builder.time(ProtoAdapter.INT64.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Count redact(Count value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
