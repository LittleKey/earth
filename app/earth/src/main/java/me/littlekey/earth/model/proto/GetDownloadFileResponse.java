// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: files.proto at 13:1
package me.littlekey.earth.model.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class GetDownloadFileResponse extends Message<GetDownloadFileResponse, GetDownloadFileResponse.Builder> {
  public static final ProtoAdapter<GetDownloadFileResponse> ADAPTER = new ProtoAdapter_GetDownloadFileResponse();

  private static final long serialVersionUID = 0L;

  public static final Long DEFAULT_LAST_TIMESTAMP = 0L;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long last_timestamp;

  @WireField(
      tag = 2,
      adapter = "me.littlekey.earth.model.proto.Art#ADAPTER",
      label = WireField.Label.REPEATED
  )
  public final List<Art> arts;

  public GetDownloadFileResponse(Long last_timestamp, List<Art> arts) {
    this(last_timestamp, arts, ByteString.EMPTY);
  }

  public GetDownloadFileResponse(Long last_timestamp, List<Art> arts, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.last_timestamp = last_timestamp;
    this.arts = Internal.immutableCopyOf("arts", arts);
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.last_timestamp = last_timestamp;
    builder.arts = Internal.copyOf("arts", arts);
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetDownloadFileResponse)) return false;
    GetDownloadFileResponse o = (GetDownloadFileResponse) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(last_timestamp, o.last_timestamp)
        && arts.equals(o.arts);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (last_timestamp != null ? last_timestamp.hashCode() : 0);
      result = result * 37 + arts.hashCode();
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (last_timestamp != null) builder.append(", last_timestamp=").append(last_timestamp);
    if (!arts.isEmpty()) builder.append(", arts=").append(arts);
    return builder.replace(0, 2, "GetDownloadFileResponse{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<GetDownloadFileResponse, Builder> {
    public Long last_timestamp;

    public List<Art> arts;

    public Builder() {
      arts = Internal.newMutableList();
    }

    public Builder last_timestamp(Long last_timestamp) {
      this.last_timestamp = last_timestamp;
      return this;
    }

    public Builder arts(List<Art> arts) {
      Internal.checkElementsNotNull(arts);
      this.arts = arts;
      return this;
    }

    @Override
    public GetDownloadFileResponse build() {
      return new GetDownloadFileResponse(last_timestamp, arts, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_GetDownloadFileResponse extends ProtoAdapter<GetDownloadFileResponse> {
    ProtoAdapter_GetDownloadFileResponse() {
      super(FieldEncoding.LENGTH_DELIMITED, GetDownloadFileResponse.class);
    }

    @Override
    public int encodedSize(GetDownloadFileResponse value) {
      return (value.last_timestamp != null ? ProtoAdapter.INT64.encodedSizeWithTag(1, value.last_timestamp) : 0)
          + Art.ADAPTER.asRepeated().encodedSizeWithTag(2, value.arts)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, GetDownloadFileResponse value) throws IOException {
      if (value.last_timestamp != null) ProtoAdapter.INT64.encodeWithTag(writer, 1, value.last_timestamp);
      Art.ADAPTER.asRepeated().encodeWithTag(writer, 2, value.arts);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public GetDownloadFileResponse decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.last_timestamp(ProtoAdapter.INT64.decode(reader)); break;
          case 2: builder.arts.add(Art.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public GetDownloadFileResponse redact(GetDownloadFileResponse value) {
      Builder builder = value.newBuilder();
      Internal.redactElements(builder.arts, Art.ADAPTER);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
