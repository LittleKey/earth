// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./earth.proto at 35:1
package me.littlekey.earth.model.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class Notice extends Message<Notice, Notice.Builder> {
  public static final ProtoAdapter<Notice> ADAPTER = new ProtoAdapter_Notice();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_IDENTITY = "";

  public static final Integer DEFAULT_TYPE = 0;

  public static final String DEFAULT_TITLE = "";

  public static final String DEFAULT_CONTENT = "";

  public static final Long DEFAULT_TIME = 0L;

  public static final String DEFAULT_URI = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String identity;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer type;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String title;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String content;

  @WireField(
      tag = 5,
      adapter = "com.squareup.wire.ProtoAdapter#INT64"
  )
  public final Long time;

  @WireField(
      tag = 6,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String uri;

  public Notice(String identity, Integer type, String title, String content, Long time, String uri) {
    this(identity, type, title, content, time, uri, ByteString.EMPTY);
  }

  public Notice(String identity, Integer type, String title, String content, Long time, String uri, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.identity = identity;
    this.type = type;
    this.title = title;
    this.content = content;
    this.time = time;
    this.uri = uri;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.identity = identity;
    builder.type = type;
    builder.title = title;
    builder.content = content;
    builder.time = time;
    builder.uri = uri;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof Notice)) return false;
    Notice o = (Notice) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(identity, o.identity)
        && Internal.equals(type, o.type)
        && Internal.equals(title, o.title)
        && Internal.equals(content, o.content)
        && Internal.equals(time, o.time)
        && Internal.equals(uri, o.uri);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (identity != null ? identity.hashCode() : 0);
      result = result * 37 + (type != null ? type.hashCode() : 0);
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (content != null ? content.hashCode() : 0);
      result = result * 37 + (time != null ? time.hashCode() : 0);
      result = result * 37 + (uri != null ? uri.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (identity != null) builder.append(", identity=").append(identity);
    if (type != null) builder.append(", type=").append(type);
    if (title != null) builder.append(", title=").append(title);
    if (content != null) builder.append(", content=").append(content);
    if (time != null) builder.append(", time=").append(time);
    if (uri != null) builder.append(", uri=").append(uri);
    return builder.replace(0, 2, "Notice{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<Notice, Builder> {
    public String identity;

    public Integer type;

    public String title;

    public String content;

    public Long time;

    public String uri;

    public Builder() {
    }

    public Builder identity(String identity) {
      this.identity = identity;
      return this;
    }

    public Builder type(Integer type) {
      this.type = type;
      return this;
    }

    public Builder title(String title) {
      this.title = title;
      return this;
    }

    public Builder content(String content) {
      this.content = content;
      return this;
    }

    public Builder time(Long time) {
      this.time = time;
      return this;
    }

    public Builder uri(String uri) {
      this.uri = uri;
      return this;
    }

    @Override
    public Notice build() {
      return new Notice(identity, type, title, content, time, uri, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_Notice extends ProtoAdapter<Notice> {
    ProtoAdapter_Notice() {
      super(FieldEncoding.LENGTH_DELIMITED, Notice.class);
    }

    @Override
    public int encodedSize(Notice value) {
      return (value.identity != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.identity) : 0)
          + (value.type != null ? ProtoAdapter.INT32.encodedSizeWithTag(2, value.type) : 0)
          + (value.title != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.title) : 0)
          + (value.content != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.content) : 0)
          + (value.time != null ? ProtoAdapter.INT64.encodedSizeWithTag(5, value.time) : 0)
          + (value.uri != null ? ProtoAdapter.STRING.encodedSizeWithTag(6, value.uri) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, Notice value) throws IOException {
      if (value.identity != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.identity);
      if (value.type != null) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.type);
      if (value.title != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.title);
      if (value.content != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.content);
      if (value.time != null) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.time);
      if (value.uri != null) ProtoAdapter.STRING.encodeWithTag(writer, 6, value.uri);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public Notice decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.identity(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.type(ProtoAdapter.INT32.decode(reader)); break;
          case 3: builder.title(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.content(ProtoAdapter.STRING.decode(reader)); break;
          case 5: builder.time(ProtoAdapter.INT64.decode(reader)); break;
          case 6: builder.uri(ProtoAdapter.STRING.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public Notice redact(Notice value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
